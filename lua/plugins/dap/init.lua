-- Check out this for guide
-- https://github.com/mfussenegger/nvim-dap/wiki/Debug-Adapter-installation
return {
  -- "mfussenegger/nvim-dap",
  -- -- keys = "<leader>",
  -- config = function()
  --   local dap = require "dap"
  --   local dapui = require "dapui"
  --   vim.fn.sign_define("DapBreakpoint", { text = "ðŸ›‘", texthl = "DiagnosticSignError", linehl = "", numhl = "" })

  --   dap.listeners.after.event_initialized["dapui_config"] = function()
  --     dapui.open()
  --   end

  --   dap.listeners.before.event_terminated["dapui_config"] = function()
  --     dapui.close()
  --   end

  --   dap.listeners.before.event_exited["dapui_config"] = function()
  --     dapui.close()
  --   end

  --   require "plugins.dap.cpptools"
  --   local which_key = require "which-key"

  --   local setup = {
  --     plugins = {
  --       marks = true, -- shows a list of your marks on ' and `
  --       registers = true, -- shows your registers on " in NORMAL or <C-r> in INSERT mode
  --       spelling = {
  --         enabled = true, -- enabling this will show WhichKey when pressing z= to select spelling suggestions
  --         suggestions = 20, -- how many suggestions should be shown in the list?
  --       },
  --       -- the presets plugin, adds help for a bunch of default keybindings in Neovim
  --       -- No actual key bindings are created
  --       presets = {
  --         operators = false, -- adds help for operators like d, y, ... and registers them for motion / text object completion
  --         motions = true, -- adds help for motions
  --         text_objects = true, -- help for text objects triggered after entering an operator
  --         windows = true, -- default bindings on <c-w>
  --         nav = true, -- misc bindings to work with windows
  --         z = true, -- bindings for folds, spelling and others prefixed with z
  --         g = false, -- bindings for prefixed with g
  --       },
  --     },
  --     -- add operators that will trigger motion and text object completion
  --     -- to enable all native operators, set the preset / operators plugin above
  --     -- operators = { gc = "Comments" },
  --     key_labels = {
  --       -- override the label used to display some keys. It doesn't effect WK in any other way.
  --       -- For example:
  --       -- ["<space>"] = "SPC",
  --       -- ["<cr>"] = "RET",
  --       -- ["<tab>"] = "TAB",
  --     },
  --     window = {
  --       border = "rounded", -- none, single, double, shadow
  --       position = "bottom", -- bottom, top
  --       margin = { 1, 0, 1, 0 }, -- extra window margin [top, right, bottom, left]
  --       padding = { 2, 0, 2, 0 }, -- extra window padding [top, right, bottom, left]
  --       winblend = 0,
  --     },
  --     layout = {
  --       height = { min = 4, max = 25 }, -- min and max height of the columns
  --       width = { min = 20, max = 50 }, -- min and max width of the columns
  --       spacing = 3, -- spacing between columns
  --       align = "left", -- align columns left, center or right
  --     },
  --     hidden = { "<silent>", ":", "<Cmd>", "<cr>", "call", "lua", "^:", "^ " }, -- hide mapping boilerplate
  --     triggers_blacklist = {
  --       -- list of mode / prefixes that should never be hooked by WhichKey
  --       -- this is mostly relevant for key maps that start with a native binding
  --       -- most people should not need to change this
  --       i = { "j", "k" },
  --       v = { "j", "k" },
  --     },
  --   }

  --   local opts = {
  --     mode = "n", -- NORMAL mode
  --     prefix = "<leader>",
  --     buffer = nil, -- Global mappings. Specify a buffer number for buffer local mappings
  --     silent = true, -- use `silent` when creating keymaps
  --     noremap = true, -- use `noremap` when creating keymaps
  --     nowait = true, -- use `nowait` when creating keymaps
  --   }

  --   local mappings = {
  --     d = {
  --       name = "Dap",
  --       c = { ":lua require'dap'.continue()<cr>", "Continue" },
  --       o = { ":lua require'dap'.step_over()<cr>", "Step Over" },
  --       i = { ":lua require'dap'.step_into()<cr>", "Step Into" },
  --       u = { ":lua require'dap'.step_out()<cr>", "Step Out" },
  --       b = { ":lua require'dap'.toggle_breakpoint()<cr>", "Breakpoint" },
  --       d = { ":lua require'dapui'.toggle()<cr>", "Dap UI" },
  --     },
  --   }
  --   which_key.setup(setup)
  --   which_key.register(mappings, opts)
  -- end,
  -- dependencies = {
  --   {
  --     "rcarriga/nvim-dap-ui",
  --     config = function()
  --       require("dapui").setup {
  --         layouts = {
  --           {
  --             elements = {
  --               -- Elements can be strings or table with id and size keys.
  --               { id = "scopes", size = 0.25 },
  --               "breakpoints",
  --               "stacks",
  --               "watches",
  --             },
  --             size = 40, -- 40 columns
  --             position = "left",
  --           },
  --           {
  --             elements = {
  --               "repl",
  --               "console",
  --             },
  --             size = 0.25, -- 25% of total lines
  --             position = "bottom",
  --           },
  --         },
  --       }
  --     end,
  --   },
  -- },
}
